using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class BombaDoChefao : MonoBehaviour {

	public enum SpawnState{SPAWNING, WAITTING, COUNTING};

	[System.Serializable]
	public class Wave
	{
		public string name;
		public Transform enemy;
		public int count;
		public float rate;

	}
	public Wave[] waves;
	private int nextWave = 0;

    public Transform[] spawnPoints;

	public float timeBetweenWaves = 5f;
	private float waveCountdown;
	private SpawnState state = SpawnState.COUNTING;

    private float searchCountdown = 1f;

	// Use this for initialization
	void Start () {
        if (spawnPoints.Length == 0)
        {
            Debug.LogError("No spawn points referenced");

        }

        waveCountdown = timeBetweenWaves;
	}
	
	// Update is called once per frame
	void Update () {
        if (state == SpawnState.WAITTING) {
            if (!EnemyIsAlive())
            {
                waveCompleted();
                
            }
            else
            {
                return;
            }
        }

		if (waveCountdown <= 0){
			if (state != SpawnState.SPAWNING) 
			{
				StartCoroutine (SpawnWave (waves [nextWave]));
				// bombs
			} 
			else 
			{
				waveCountdown -= Time.deltaTime;
			}
		}
        
	}
    void waveCompleted()
    {
        Debug.Log("Wave Completead");

        state = SpawnState.COUNTING;

        waveCountdown = timeBetweenWaves;

        if (nextWave + 1 > waves.Length - 1)
        {
            nextWave = 0; Debug.Log("All  waves Complete! Looping...");
        }
        else
        {

            nextWave++;
        }
    }
    bool EnemyIsAlive()
    {
        searchCountdown -= Time.deltaTime;
        if (searchCountdown <= 0f) {

            searchCountdown = 1f;
            if (GameObject.FindGameObjectWithTag("bombBoss") == null)
            {
                return false;
            }
        }
        
        return true;
    }
    IEnumerator SpawnWave(Wave _wave)
	{
        Debug.Log("Spawning Wave: "+ _wave.name);
        state = SpawnState.SPAWNING;
		for (int i = 0; i < _wave.count; i++)
		{
			SpawnEnemy(_wave.enemy);
			yield return new WaitForSeconds (1f / _wave.rate);
		}
		// bombs

		state = SpawnState.WAITTING;

		yield break;
	}
	void SpawnEnemy(Transform _enemy)
	{
        //bombs
		Debug.Log("Spawning Enemy:"+ _enemy.name);
      
        Transform _sp = spawnPoints[Random.Range(0, spawnPoints.Length)];
        Instantiate(_enemy, transform.position, transform.rotation);
    }
}
